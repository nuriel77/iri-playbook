- name: add user to run haproxy as
  user:
    name: "{{ haproxy_username }}"
    shell: /sbin/nologin
    createhome: no
    home: "{{ haproxy_dir }}"
  tags:
    - haproxy_user

- name: copy certbot haproxy script
  copy:
    src: files/certbot-haproxy.sh
    dest: /usr/local/bin/certbot-haproxy.sh
    mode: 0755
  tags:
    - certbot
    - scripts

- name: lua code block
  block:

    - name: remove existing lua dir
      file:
        path: "{{ lua_dir }}"
        state: absent
      when: remove_lua_dir is defined and remove_lua_dir

    # Re-download lua?
    - name: stat lua dir
      stat:
        path: "{{ lua_dir }}"
      register: lua_dir_stat

    - name: download and unarchive lua
      unarchive:
        src: "https://www.lua.org/ftp/lua-{{ lua_version }}.tar.gz"
        dest: /tmp
        remote_src: True
      when: not lua_dir_stat.stat.exists
      register: lua_downloaded

    - name: move temporary extracted lua directory to its dir
      shell: "mv /tmp/lua-{{ lua_version }} {{ lua_dir }}"
      when: lua_downloaded and lua_downloaded.changed

    - name: make lua install
      shell: "cd {{ lua_dir }} && make linux && make install"
      when: lua_downloaded and lua_downloaded.changed   

  tags:
    - lua_install

- name: haproxy code block
  block:

    - name: remove existing haproxy dir
      file:
        path: "{{ haproxy_dir }}"
        state: absent
      when:
        - remove_haproxy_dir is defined
        - remove_haproxy_dir|bool

    # Re-download haproxy?
    - name: stat haproxy dir
      stat:
        path: "{{ haproxy_dir }}"
      register: haproxy_dir_stat

    - name: download and unarchive haproxy release
      unarchive:
        src: "http://www.haproxy.org/download/{{ haproxy_base_version }}/src/haproxy-{{ haproxy_base_version }}.{{ haproxy_min_version }}.tar.gz"
        dest: /tmp
        remote_src: True
      when: not haproxy_dir_stat.stat.exists
      register: haproxy_downloaded

    - name: move temporary extracted haproxy directory to its dir
      shell: "mv /tmp/haproxy-{{ haproxy_base_version }}.{{ haproxy_min_version }} {{ haproxy_dir }}"
      when:
        - haproxy_downloaded is defined
        - haproxy_downloaded.changed

    - name: ensure haproxy dir ownership and permissions
      file:
        path: "{{ haproxy_dir }}"
        state: directory
        mode: 0750
        owner: root
        group: "{{ haproxy_username }}"

    - name: make haproxy compile and install
      shell: "cd {{ haproxy_dir }} && make clean && make TARGET=linux-glibc CPU=generic USE_PCRE=1 USE_LIBCRYPT=1 USE_LINUX_SPLICE=1 USE_LINUX_TPROXY=1 USE_OPENSSL=1 USE_ZLIB=1 USE_LUA=1 LUA_LIB=/usr/local/lib LUA_INC=/usr/local/include LDFLAGS=-ldl EXTRA_OBJS=\"contrib/prometheus-exporter/service-prometheus.o\" && make install"
      when:
        - haproxy_downloaded is defined
        - haproxy_downloaded.changed

  tags:
    - haproxy_install
