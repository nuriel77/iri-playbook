- name: set variables centos
  set_fact:
    config_dir: /etc/sysconfig
  when: ansible_distribution == 'CentOS'

- name: set variables debian/ubuntu
  set_fact:
    config_dir: /etc/default
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: stop consul
  systemd:
    name: consul
    state: stopped
    enabled: false
  ignore_errors: yes

- name: stop consul-template
  systemd:
    name: consul-template
    state: stopped
    enabled: false
  ignore_errors: yes

- name: remove consul systemd file
  file:
    path: "/etc/systemd/system/{{ item }}"
    state: absent
  notify:
    - reload systemd
  with_items:
    - 'consul-template.service'
    - 'consul.service'

- name: remove consul related files and paths
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "/var/lib/consul"
    - "/etc/consul"
    - "{{ consul_node_check }}"
    - "{{ consul_template_basedir }}"
    - "/etc/haproxy/haproxy.cfg.tmpl"
    - "{{ config_dir }}/consul-template"
    - "{{ config_dir }}/consul"
    - "/usr/local/bin/haproxy_reload.sh"

- name: remove consul user
  user:
    name: "{{ consul_username }}"
    state: absent

- name: set ip variable if not set
  set_fact:
    ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
  when: ip is not defined

- name: remove consul ports ufw
  ufw:
    rule: allow
    direction: in
    src: "{{ item[0] }}"
    proto: "{{ item[1].proto }}"
    port: "{{ item[1].port }}"
    delete: yes
  with_nested:
    - "{{ groups['fullnode'] | map('extract', hostvars, ['ip']) | list | difference([ip]) }}"
    - - {"port": 8600, "proto": "udp"}
      - {"port": 8600, "proto": "tcp"}
      - {"port": 8300, "proto": "tcp"}
      - {"port": 8301, "proto": "tcp"}
      - {"port": 8302, "proto": "tcp"}
      - {"port": 8303, "proto": "tcp"}
      - {"port": 8304, "proto": "tcp"}
      - {"port": 8300, "proto": "udp"}
      - {"port": 8301, "proto": "udp"}
      - {"port": 8302, "proto": "udp"}
      - {"port": 8303, "proto": "udp"}
      - {"port": 8304, "proto": "udp"}
      - {"port": '{{ consul_ssl_port }}', "proto": "tcp"}
  when:
    - groups['fullnode'] | length > 1
    - ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  ignore_errors: yes

- name: remove consul ports firewalld
  firewalld:
    rich_rule: 'rule family="ipv4" source address="{{ item[0] }}" port port={{ item[1].port }} protocol={{ item[1].proto }} accept'
    permanent: true
    state: disabled
    immediate: true
    zone: public
  with_nested:
    - "{{ groups['fullnode'] | map('extract', hostvars, ['ip']) | list | difference([ip]) }}"
    - - {"port": 8600, "proto": "udp"}
      - {"port": 8600, "proto": "tcp"}
      - {"port": 8300, "proto": "tcp"}
      - {"port": 8301, "proto": "tcp"}
      - {"port": 8302, "proto": "tcp"}
      - {"port": 8303, "proto": "tcp"}
      - {"port": 8304, "proto": "tcp"}
      - {"port": 8300, "proto": "udp"}
      - {"port": 8301, "proto": "udp"}
      - {"port": 8302, "proto": "udp"}
      - {"port": 8303, "proto": "udp"}
      - {"port": 8304, "proto": "udp"}
      - {"port": '{{ consul_ssl_port }}', "proto": "tcp"}
  when:
    - groups['fullnode'] | length > 1
    - ansible_distribution == 'CentOS'
  ignore_errors: yes

- name: remove consul container
  docker_container:
    name: consul
    state: absent
  ignore_errors: yes

- name: remove consul image
  docker_image:
    force_absent: yes
    state: absent
    name: "{{ consul_image }}"
  ignore_errors: yes
