#!/bin/bash

[ -n "${DEBUG}" ] && set -x

: ${HAPROXY_CONFIG_DIR:=/etc/haproxy}

function haproxy_check() {
    local RAND_NAME="$(cat /dev/urandom | tr -dc 'a-z0-9' | fold -w 7 | head -n 1)"
    /usr/bin/docker run --name "haproxy-${RAND_NAME}" \
      --hostname "$(hostname -f)" \
      --rm \
{% for mount in haproxy_mounts %}
      -v {{ mount }} \
{% endfor %}
      {{ haproxy_image }}:{{ haproxy_tag }} \
      haproxy -c -f /usr/local/etc/haproxy/haproxy.cfg | logger -t haproxy-reload
    if [ $? -ne 0 ]; then
        echo "$0: configuration check error for haproxy.cfg" | logger -t haproxy-reload
        if [[ "$1" == "rollback" ]]; then
            cp "$HAPROXY_CONFIG_DIR/haproxy.cfg.previous" "$HAPROXY_CONFIG_DIR/haproxy.cfg"
        fi
        exit 1
    fi
}

# first start
if [ ! -f "$HAPROXY_CONFIG_DIR/haproxy.cfg.previous" ]; then
    echo "$0: First configuration" | logger -t haproxy-reload
    haproxy_check
    cp "$HAPROXY_CONFIG_DIR/haproxy.cfg" "$HAPROXY_CONFIG_DIR/haproxy.cfg.previous"
    systemctl status haproxy >/dev/null
    RC=$?
    if [ $RC -eq 3 ]; then
        systemctl start haproxy
    elif [ $RC -eq 0 ]; then
        systemctl reload haproxy
    fi  
    exit 0
fi

# configuration update occured
CHECK=$(diff -u -p "$HAPROXY_CONFIG_DIR/haproxy.cfg.previous" "$HAPROXY_CONFIG_DIR/haproxy.cfg" | egrep -c "^[-+]    server ")
echo "$0 check has diff: int $CHECK" | logger -t haproxy-reload

# we trigger a reload only when backends have been removed or added
if [ ${CHECK} -gt 0 ]; then
    echo "$0: Backend(s) has(ve) been added or removed, need to reload the configuration" | logger -t haproxy-reload
    haproxy_check rollback
    systemctl reload haproxy
fi

cp "$HAPROXY_CONFIG_DIR/haproxy.cfg" "$HAPROXY_CONFIG_DIR/haproxy.cfg.previous"
