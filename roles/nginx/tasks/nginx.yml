- name: set variables centos/redhat
  set_fact:
    systemd_dir: /usr/lib/systemd/system
    config_dir: /etc/sysconfig
  tags: always
  when: ansible_distribution == 'CentOS'

- name: set variables debian/ubuntu
  set_fact:
    systemd_dir: /etc/systemd/system
    config_dir: /etc/default
  tags: always
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: add user to run nginx as
  user:
    name: "{{ nginx_username }}"
    shell: /sbin/nologin
    createhome: yes
    home: /var/lib/nginx
  tags:
    - nginx_user

- name: get nginx user uid
  shell: "echo -n $(id -u {{ nginx_username }})"
  changed_when: false
  register: nginx_uid

- name: create nginx log directory
  file:
    path: /var/log/nginx
    state: directory
    mode: 0700

- name: copy systemd service file
  template:
    src: templates/nginx.service.j2
    dest: "{{ systemd_dir }}/nginx.service"
  notify:
    - restart nginx

- name: copy nginx environment file
  template:
    src: templates/nginx.sysconfig.j2
    dest: "{{ config_dir }}/nginx"
  notify:
    - restart nginx

- name: copy validation script
  copy:
    src: ../shared-files/validate_nginx_config.sh
    dest: /usr/local/bin/validate_nginx_config.sh
    mode: 0755

- name: ensure nginx config directories exist
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /etc/nginx
    - /etc/nginx/conf.d

- name: copy nginx base config
  template:
    src: templates/nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    force: "{{ overwrite | default('no') }}"
    backup: yes
  notify:
    - restart nginx

- name: copy ssl.cfg nginx config
  template:
    src: ../shared-files/ssl.cfg.j2
    dest: /etc/nginx/conf.d/ssl.cfg
    validate: "/usr/local/bin/validate_nginx_config.sh -t %s -d ssl.cfg"
  notify:
    - restart nginx
  tags:
    - configure_nginx_ssl

- name: configure nginx access password
  htpasswd:
    path: /etc/nginx/.htpasswd
    name: '{{ fullnode_user }}'
    password: '{{ fullnode_user_password }}'
    owner: root
    group: 101
    mode: 0640
  no_log: true

- import_tasks: image-nginx.yml
  tags:
    - nginx_docker_image

- name: flush handlers
  meta: flush_handlers

- name: ensure nginx started and enabled
  systemd:
    name: nginx.service
    state: started
    enabled: true
