- name: copy grafana new config file
  template:
    src: templates/grafana.ini.j2
    dest: /etc/grafana/grafana.ini
    backup: yes
  notify:
    - restart grafana

- name: start and enable grafana service
  systemd:
    name: grafana-server
    state: started
    enabled: yes

- name: copy validation script
  copy:
    src: ../shared-files/validate_nginx_config.sh
    dest: /usr/local/bin/validate_nginx_config.sh
    mode: 0755
  when: install_nginx is defined and install_nginx|bool

- name: copy grafana nginx config
  template:
    src: templates/grafana.conf.j2
    dest: /etc/nginx/conf.d/grafana.conf
    validate: "/usr/local/bin/validate_nginx_config.sh -t %s -d conf.d/grafana.conf -r"
  when: install_nginx is defined and install_nginx|bool
  notify:
    - reload nginx

- name: flush handlers
  meta: flush_handlers

- name: Wait max 90 seconds for grafana port to become available
  wait_for:
    timeout: 90
    port: "{{ grafana_port }}"
  when: wait_for_grafana|default(true)|bool

- name: create provisioning, datasources and dashboards directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ grafana_provisioning_path }}"
    - "{{ grafana_provisioning_path }}/datasources"
    - "{{ grafana_provisioning_path }}/dashboards"
    - "{{ grafana_dashboards_path }}"

- name: copy default datasource provisioning file
  template:
    src: templates/grafana.datasources.prov.yaml.j2
    dest: "{{ grafana_provisioning_path }}/datasources/grafana.datasources.prov.yaml"
  notify:
    - restart grafana

- name: copy default dashboard provisioning file
  template:
    src: templates/grafana.dashboards.prov.yaml.j2
    dest: "{{ grafana_provisioning_path }}/dashboards/grafana.dashboards.prov.yaml"
  notify:
    - restart grafana

- name: copy dashboards
  copy:
    src: "files/{{ item }}"
    dest: "{{ grafana_dashboards_path }}/{{ item }}"
  with_items:
    - "iota_exporter_dashboard.json"
    - "prometheus_dashboard.json"
    - "node_exporter_dashboard.json"
    - "haproxy_exporter.json"
