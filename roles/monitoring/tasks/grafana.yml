- name: add user to run grafana as
  user:
    name: "{{ grafana_username }}"
    shell: /sbin/nologin
    createhome: no
    home: "{{ grafana_basedir }}"
  tags:
    - prom_user

- name: get grafana user uid
  shell: "echo -n $(id -u {{ grafana_username }})"
  changed_when: false
  register: grafana_uid
  tags:
    - grafana_user

- name: create grafana config directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0700
    owner: "{{ grafana_username }}"
    group: "{{ grafana_username }}"
  with_items:
    - "{{ grafana_configdir }}"
    - "{{ grafana_provisioning_path }}"
    - "{{ grafana_basedir }}"
    - "{{ grafana_dashboards_path }}"

- import_tasks: image-grafana.yml
  tags:
    - grafana_docker_image

- name: copy grafana sysconfig file
  template:
    src: templates/grafana.sysconfig.j2
    dest: "{{ config_dir }}/grafana-server"
    force: "{{ overwrite | default('no') }}"
  notify:
      - restart grafana-server

- name: copy grafana systemd service file
  template:
    src: templates/grafana-server.service.j2
    dest: "{{ systemd_dir }}/grafana-server.service"
  notify:
    - restart grafana-server

- name: copy grafana new config file
  template:
    src: templates/grafana.ini.j2
    dest: /etc/grafana/grafana.ini
    force: "{{ overwrite | default('no') }}"
    backup: yes
    owner: "{{ grafana_username }}"
    group: "{{ grafana_username }}"
    mode: 0600
  notify:
    - restart grafana-server

- name: flush handlers
  meta: flush_handlers

- name: start and enable grafana service
  systemd:
    name: grafana-server
    state: started
    enabled: yes

- name: flush handlers
  meta: flush_handlers

- name: Wait max 90 seconds for grafana port to become available
  wait_for:
    timeout: 90
    port: "{{ grafana_port }}"

- name: create provisioning, datasources and dashboards directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ grafana_provisioning_path }}"
    - "{{ grafana_provisioning_path }}/datasources"
    - "{{ grafana_provisioning_path }}/dashboards"
    - "{{ grafana_dashboards_path }}"

- name: copy default datasource provisioning file
  template:
    src: templates/grafana.datasources.prov.yaml.j2
    dest: "{{ grafana_provisioning_path }}/datasources/grafana.datasources.prov.yaml"
  notify:
    - restart grafana-server

- name: copy default dashboard provisioning file
  template:
    src: templates/grafana.dashboards.prov.yaml.j2
    dest: "{{ grafana_provisioning_path }}/dashboards/grafana.dashboards.prov.yaml"
  notify:
    - restart grafana-server

- name: copy dashboards
  copy:
    src: "files/{{ item }}"
    dest: "{{ grafana_dashboards_path }}/{{ item }}"
  with_items:
    - "iota_exporter_dashboard.json"
    - "prometheus_dashboard.json"
    - "node_exporter_dashboard.json"
    - "cadvisor_dashboard.json"
    - "haproxy_exporter.json"
