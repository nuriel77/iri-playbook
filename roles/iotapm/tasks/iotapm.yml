- name: set variables centos/redhat
  set_fact:
    systemd_dir: /usr/lib/systemd/system
    config_dir: /etc/sysconfig
  tags: always
  when: ansible_distribution == 'CentOS'

- name: set variables debian/ubuntu
  set_fact:
    systemd_dir: /etc/systemd/system
    config_dir: /etc/default
  tags: always
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: add user to run iota-pm as
  user:
    name: "{{ iotapm_username }}"
    shell: /sbin/nologin
    createhome: no
    home: /var/spool/iotapm
  tags:
    - iotapm_user

- name: get iotapm user uid
  shell: "echo -n $(id -u {{ iotapm_username }})"
  changed_when: false
  register: iotapm_uid

- name: create iotapm spool directory
  file:
    path: /var/spool/iotapm
    state: directory
    owner: "{{ iotapm_username }}"
    group: "{{ iotapm_username }}"

- name: copy basic tag file
  copy:
    content: '{}'
    dest: /var/spool/iotapm/iota-pm.conf
    mode: 0640
    group: root
    owner: "{{ iotapm_username }}"

- name: copy systemd service file
  template:
    src: templates/iota-pm.service.j2
    dest: "{{ systemd_dir }}/iota-pm.service"
  notify:
    - restart iota-pm

- name: copy iota-pm environment file
  template:
    src: templates/iota-pm.sysconfig.j2
    dest: "{{ config_dir }}/iota-pm"
    force: "{{ overwrite | default('no') }}"
    backup: yes
  notify:
    - restart iota-pm

- import_tasks: image-iotapm.yml
  tags:
    - iotapm_docker_image

- name: ensure iota-pm started and enabled
  systemd:
    name: iota-pm.service
    state: started
    enabled: true
    daemon_reload: true
  register: iotapm_started
