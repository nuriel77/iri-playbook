- name: set variables centos/redhat
  set_fact:
    systemd_dir: /usr/lib/systemd/system
    config_dir: /etc/sysconfig
  when: ansible_distribution == 'CentOS'

- name: set variables debian/ubuntu
  set_fact:
    systemd_dir: /lib/systemd/system
    config_dir: /etc/default
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: add user to run nelson as
  user:
    name: "{{ nelson_username }}"
    shell: /sbin/nologin
    createhome: no
    home: "{{ nelson_datadir }}"
  tags:
    - nelson_user

- name: get nelson user uid
  shell: "echo -n $(id -u {{ nelson_username }})"
  changed_when: false
  register: nelson_uid

- name: create nelson data and config directory
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ nelson_username }}"
    group: "{{ nelson_username }}"
    mode: 0700
  with_items:
    - "{{ nelson_configdir }}"
    - "{{ nelson_datadir }}"

- name: copy nelson config
  template:
    src: "templates/config.ini.j2"
    dest: "{{ nelson_configdir }}/config.ini"
    owner: "{{ nelson_username }}"
    group: "{{ nelson_username }}"
    mode: 0600
    force: "{{ overwrite | default('no') }}"
    backup: yes
  notify:
    - restart nelson

- name: copy nelson gui config
  template:
    src: "templates/nelson-gui.sysconfig.j2"
    dest: "{{ config_dir }}/nelson-gui"
    force: "{{ overwrite | default('no') }}"
    backup: yes
  notify:
    - restart nelson-gui

- name: copy nelson environment configuration file
  template:
    src: templates/nelson.sysconfig.j2
    dest: "{{ config_dir }}/nelson"
    force: "{{ overwrite | default('no') }}"
  notify:
    - restart nelson

- name: copy nelson systemd service file
  template:
    src: "templates/{{ item }}.j2"
    dest: "{{ systemd_dir }}/{{ item }}"
    force: "{{ overwrite | default('no') }}"
  with_items:
    - nelson.service
  notify:
    - restart nelson

- name: copy nelson gui systemd service file
  template:
    src: "templates/{{ item }}.j2"
    dest: "{{ systemd_dir }}/{{ item }}"
  with_items:
    - nelson-gui.service
  notify:
    - restart nelson-gui

- name: 'download nelson images, this can take a moment...'
  docker_image:
    name: "{{ item.image }}"
    tag: "{{ item.tag }}"
  with_items:
    - { "image": "{{ nelson_image }}", "tag": "{{ nelson_tag }}" }
    - { "image": "{{ nelsongui_image }}", "tag": "{{ nelsongui_tag }}" }
  tags:
    - nelson_docker_images
  notify:
    - restart nelson
    - restart nelson-gui

- name: flush handlers
  meta: flush_handlers

- name: ensure nelson services started and enabled
  systemd:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - nelson.service
    - nelson-gui.service
