- name: set variables centos/redhat
  set_fact:
    systemd_dir: /usr/lib/systemd/system
    config_dir: /etc/sysconfig
  tags: always
  when: ansible_distribution == 'CentOS'

- name: set variables debian/ubuntu
  set_fact:
    systemd_dir: /lib/systemd/system
    config_dir: /etc/default
  tags: always
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- import_tasks: image-haproxy.yml
  tags:
    - haproxy_docker_image

- name: ensure etc haproxy dir
  file:
    path: /etc/haproxy
    state: directory
    owner: root
    group: "{{ haproxy_username }}"
    mode: 0750

- name: rsyslog haproxy to own file
  copy:
    src: files/haproxy.rsyslog
    dest: /etc/rsyslog.d/haproxy.conf
  notify:
    - restart rsyslog
  tags:
    - haproxy_rsyslog

- name: copy haproxy logrotate file
  copy:
    src: files/haproxy.logrotate
    dest: /etc/logrotate.d/haproxy

- name: copy haproxy sysconfig file
  template:
    src: templates/haproxy.sysconfig.j2
    dest: "{{ config_dir }}/haproxy"
  notify:
    - restart haproxy

- name: copy haproxy service file
  template:
    src: templates/haproxy.service.j2
    dest: "{{ systemd_dir }}/haproxy.service"
  notify:
    - restart haproxy

- name: copy whitelist file
  template:
    src: templates/whitelist.lst.j2
    dest: /etc/haproxy/whitelist.lst
    force: "{{ overwrite | default('no') }}"
  tags:
    - haproxy_cfg
  when:
    - haproxy_use_whitelist_file is defined
    - haproxy_use_whitelist_file|bool == True
  notify:
    - restart haproxy

- name: copy haproxy config
  template:
    src: templates/haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
    backup: yes
    force: "{{ overwrite | default('no') }}"
    mode: 0600
    owner: "{{ haproxy_username }}"
    group: "{{ haproxy_username }}"
    validate: "/usr/bin/docker run --name haproxy_test --rm -v %s:/usr/local/etc/haproxy/haproxy.cfg:ro,Z -v /etc/ssl:/etc/ssl:ro,Z -v /etc/letsencrypt:/etc/letsencrypt:ro,Z {{ haproxy_image }}:{{ haproxy_tag }} haproxy -c -f /usr/local/etc/haproxy/haproxy.cfg"
  tags:
    - haproxy_cfg
  notify:
    - restart haproxy
  when: >
        consul_enabled is not defined or
        consul_enabled|bool == False

- name: flush handlers
  meta: flush_handlers

- name: start and enable haproxy
  systemd:
    name: haproxy
    state: started
    enabled: yes
    daemon_reload: yes

- name: copy stats command file
  copy:
    src: ../shared-files/show-stat
    dest: /usr/bin/show-stat
    mode: 0755
  tags:
    - showstat_script
